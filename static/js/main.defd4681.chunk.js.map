{"version":3,"sources":["component/nav.js","component/header.js","component/mainHome.js","component/masting.js","component/forecast.js","config/config.js","component/contact.js","component/about.js","App.js","serviceWorker.js","index.js"],"names":["nav","menu","className","to","Header","useState","setMenu","onClick","mainHome","src","alt","masting","data","Region","LocalizedName","Country","AdministrativeArea","Forecast","city","setCity","setData","infoForecast","setInfoForecast","useEffect","url","a","fetch","mode","credentials","then","res","json","Cityresult","console","log","getCity","Key","info","Headline","getInfo","Split","str","res1","split","concat","AddPath","num","strPath","ConvertToCelsius","Math","round","toString","htmlFor","type","name","id","value","onChange","target","DailyForecasts","Date","Day","Icon","IconPhrase","width","height","Temperature","Maximum","Value","Minimum","contact","about","App","exact","path","component","MainHome","Contact","About","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.defd4681.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function nav({ menu }) {\r\n  return (\r\n    <>\r\n      <nav className={menu}>\r\n        <ul>\r\n          <li className=\"py-2 font-semibold block hover:bg-blue-400 rounded\">\r\n            <NavLink to=\"/forecast\">Forecast</NavLink>\r\n          </li>\r\n          <li className=\"py-2 font-semibold block hover:bg-blue-400 rounded\">\r\n            <NavLink to=\"/contact\">Contact</NavLink>\r\n          </li>\r\n          <li className=\"py-2 font-semibold block hover:bg-blue-400 rounded\">\r\n            <NavLink to=\"/about\">About</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Nav from \"./nav\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  const [menu, setMenu] = useState(\"hidden\");\r\n\r\n  const navFunc = () => {\r\n    const active = menu === \"hidden\" ? \"block\" : \"hidden\";\r\n    setMenu(active);\r\n  };\r\n\r\n  return (\r\n    <header className=\"w-full\">\r\n      <div className=\"topnav\">\r\n        <div className=\"block py-3 text-2xl font-bold border-bottom\">\r\n          <NavLink to=\"/\">\r\n            NELLY METEO <i className=\"far fa-laugh-beam text-yellow-600\"></i>\r\n          </NavLink>\r\n        </div>\r\n        <button\r\n          className=\"icon w-2/12 md:w-1/12 focus:outline-none\"\r\n          onClick={navFunc}\r\n        >\r\n          {menu === \"hidden\" ? (\r\n            <i className=\"fa fa-bars\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-times\"></i>\r\n          )}\r\n        </button>\r\n        <Nav menu={menu} />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\n//\"homepage\": \"https://wolfgangnelli.github.io/nellyMeteoApp/\",\r\n","import React from \"react\";\r\n\r\nexport default function mainHome() {\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"w-full object-cover min-h-screen\"\r\n        src=\"https://picsum.photos/400/600?random=1\"\r\n        alt=\"ImageBG\"\r\n      />\r\n      <div className=\"content\">\r\n        <h1 className=\"font-bold text-xl\">\r\n          Nelly Meteo App <i className=\"fas fa-cloud-sun text-white\"></i>\r\n        </h1>\r\n        <p>\r\n          Questa app consente di vedere le previsoni del meteo per qualunque\r\n          citt√†\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function masting({ data }) {\r\n  return (\r\n    <div className=\"mt-8 w-3/4 mx-auto\">\r\n      <hr />\r\n      <p className=\"text-white font-light mt-2\">\r\n        {data.Region ? data.Region.LocalizedName : null}\r\n        {data.Region ? (\r\n          <span className=\"text-gray-500 ml-1 mr-1\">></span>\r\n        ) : null}\r\n        {data.Country ? data.Country.LocalizedName : null}\r\n        {data.Country ? (\r\n          <span className=\"text-gray-500 ml-1 mr-1\">></span>\r\n        ) : null}\r\n        {data.AdministrativeArea ? data.AdministrativeArea.LocalizedName : null}\r\n        {data.AdministrativeArea ? (\r\n          <span className=\"text-gray-500 ml-1 mr-1\">></span>\r\n        ) : null}\r\n        {data.LocalizedName}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LOCATION_CITY_SEARCH_API,\r\n  FORECAST_5DAYS_API,\r\n  IMAGE,\r\n} from \"../config/config\";\r\nimport Masting from \"./masting\";\r\n\r\nconst PUBLIC_URL = \"http://localhost:3000/src/images\";\r\n\r\nexport default function Forecast() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [data, setData] = useState({});\r\n  const [infoForecast, setInfoForecast] = useState({});\r\n\r\n  useEffect(() => {\r\n    const url = `${LOCATION_CITY_SEARCH_API}apikey=QGVG9Vsobr9AqAIzQywUbADjw6K9EhS6&q=${city}&details=true`;\r\n\r\n    const getCity = async () => {\r\n      const Cityresult = await fetch(url, {\r\n        mode: \"no-cors\",\r\n        credentials: \"omit\",\r\n      }).then((res) => res.json());\r\n\r\n      if (Cityresult[0]) {\r\n        setData(Cityresult[0]);\r\n      }\r\n      console.log(Cityresult[0]);\r\n    };\r\n    getCity();\r\n    //setCity(\"\");\r\n  }, [city]);\r\n\r\n  useEffect(() => {\r\n    const url = `${FORECAST_5DAYS_API}${data.Key}?apikey=QGVG9Vsobr9AqAIzQywUbADjw6K9EhS6&details=true`;\r\n\r\n    const getInfo = async () => {\r\n      const info = await fetch(url, {\r\n        mode: \"no-cors\",\r\n        credentials: \"omit\",\r\n      }).then((res) => res.json());\r\n\r\n      if (info.Headline) {\r\n        setInfoForecast(info);\r\n      }\r\n      console.log(info);\r\n    };\r\n    getInfo();\r\n  }, [data]);\r\n\r\n  const SearchCity = ({ target }) => {\r\n    console.log(target.value);\r\n    setCity(target.value);\r\n  };\r\n\r\n  const Split = (str) => {\r\n    console.log(str);\r\n    let slash = \"/\";\r\n    let res = str.split(\"T\");\r\n    let res1 = res[0].split(\"-\");\r\n    return res1[1].concat(slash, res1[2]);\r\n  };\r\n\r\n  const AddPath = (num) => {\r\n    let strPath = IMAGE.concat(num, \".png\");\r\n    console.log(strPath);\r\n    return strPath;\r\n  };\r\n\r\n  const ConvertToCelsius = (num) => {\r\n    const a = 32;\r\n    const b = 5;\r\n    const c = 9;\r\n    let celsius = Math.round((num - a) * (b / c)).toString();\r\n    let res = celsius.concat(\"¬∞\");\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <h2 className=\"text-xl font-semibold underline mt-6\">\r\n        5 Days of Daily Forecasts\r\n      </h2>\r\n      <form className=\"flex justify-center items-center mt-6\">\r\n        <label htmlFor=\"city\">City name: </label>\r\n        <input\r\n          className=\"text-black ml-2 focus:outline-none\"\r\n          type=\"search\"\r\n          name=\"city\"\r\n          id=\"city\"\r\n          value={city}\r\n          onChange={SearchCity}\r\n        />\r\n      </form>\r\n      <Masting data={data} />\r\n\r\n      <div className=\"mt-8\">\r\n        {infoForecast.DailyForecasts ? (\r\n          <ul className=\"list-none mt-6\">\r\n            <li className=\"flex flex-col md:flex-row justify-center items-center p-2 bg-white text-black w-2/4 rounded mx-auto\">\r\n              <p>{Split(infoForecast.DailyForecasts[0].Date)}</p>\r\n              <img\r\n                src={\r\n                  infoForecast.DailyForecasts[0].Day\r\n                    ? AddPath(infoForecast.DailyForecasts[0].Day.Icon)\r\n                    : null\r\n                }\r\n                alt={\r\n                  infoForecast.DailyForecasts[0].Day\r\n                    ? infoForecast.DailyForecasts[0].Day.IconPhrase\r\n                    : \"Image not found\"\r\n                }\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              ></img>\r\n              <span>\r\n                {infoForecast.DailyForecasts[0].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[0].Temperature.Maximum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600\">\r\n                /\r\n                {infoForecast.DailyForecasts[0].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[0].Temperature.Minimum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"ml-5\">\r\n                {infoForecast.DailyForecasts[0].Day\r\n                  ? infoForecast.DailyForecasts[0].Day.IconPhrase\r\n                  : \"-\"}\r\n              </span>\r\n            </li>\r\n            {/* 111111111111 */}\r\n            <li className=\"flex flex-col md:flex-row justify-center items-center p-2 bg-white text-black w-2/4 rounded mx-auto mt-1\">\r\n              <p>{Split(infoForecast.DailyForecasts[1].Date)}</p>\r\n              <img\r\n                src={\r\n                  infoForecast.DailyForecasts[1].Day\r\n                    ? AddPath(infoForecast.DailyForecasts[1].Day.Icon)\r\n                    : null\r\n                }\r\n                alt={\r\n                  infoForecast.DailyForecasts[1].Day\r\n                    ? infoForecast.DailyForecasts[1].Day.IconPhrase\r\n                    : \"Image not found\"\r\n                }\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              ></img>\r\n              <span>\r\n                {infoForecast.DailyForecasts[1].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[1].Temperature.Maximum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600\">\r\n                /\r\n                {infoForecast.DailyForecasts[1].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[1].Temperature.Minimum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"ml-5\">\r\n                {infoForecast.DailyForecasts[1].Day\r\n                  ? infoForecast.DailyForecasts[1].Day.IconPhrase\r\n                  : \"-\"}\r\n              </span>\r\n            </li>\r\n            {/* 222222222 */}\r\n            <li className=\"flex flex-col md:flex-row justify-center items-center p-2 bg-white text-black w-2/4 rounded mx-auto mt-1\">\r\n              <p>{Split(infoForecast.DailyForecasts[2].Date)}</p>\r\n              <img\r\n                src={\r\n                  infoForecast.DailyForecasts[2].Day\r\n                    ? AddPath(infoForecast.DailyForecasts[2].Day.Icon)\r\n                    : null\r\n                }\r\n                alt={\r\n                  infoForecast.DailyForecasts[2].Day\r\n                    ? infoForecast.DailyForecasts[2].Day.IconPhrase\r\n                    : \"Image not found\"\r\n                }\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              ></img>\r\n              <span>\r\n                {infoForecast.DailyForecasts[2].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[2].Temperature.Maximum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600\">\r\n                /\r\n                {infoForecast.DailyForecasts[2].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[2].Temperature.Minimum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"ml-5\">\r\n                {infoForecast.DailyForecasts[2].Day\r\n                  ? infoForecast.DailyForecasts[2].Day.IconPhrase\r\n                  : \"-\"}\r\n              </span>\r\n            </li>\r\n            {/* 33333333 */}\r\n            <li className=\"flex flex-col md:flex-row justify-center items-center p-2 bg-white text-black w-2/4 rounded mx-auto mt-1\">\r\n              <p>{Split(infoForecast.DailyForecasts[3].Date)}</p>\r\n              <img\r\n                src={\r\n                  infoForecast.DailyForecasts[3].Day\r\n                    ? AddPath(infoForecast.DailyForecasts[3].Day.Icon)\r\n                    : null\r\n                }\r\n                alt={\r\n                  infoForecast.DailyForecasts[3].Day\r\n                    ? infoForecast.DailyForecasts[3].Day.IconPhrase\r\n                    : \"Image not found\"\r\n                }\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              ></img>\r\n              <span>\r\n                {infoForecast.DailyForecasts[3].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[3].Temperature.Maximum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600\">\r\n                /\r\n                {infoForecast.DailyForecasts[3].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[3].Temperature.Minimum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"ml-5\">\r\n                {infoForecast.DailyForecasts[3].Day\r\n                  ? infoForecast.DailyForecasts[3].Day.IconPhrase\r\n                  : \"-\"}\r\n              </span>\r\n            </li>\r\n            {/* 44444444 */}\r\n            <li className=\"flex flex-col md:flex-row justify-center items-center p-2 bg-white text-black w-2/4 rounded mx-auto mt-1\">\r\n              <p>{Split(infoForecast.DailyForecasts[4].Date)}</p>\r\n              <img\r\n                src={\r\n                  infoForecast.DailyForecasts[4].Day\r\n                    ? AddPath(infoForecast.DailyForecasts[4].Day.Icon)\r\n                    : null\r\n                }\r\n                alt={\r\n                  infoForecast.DailyForecasts[4].Day\r\n                    ? infoForecast.DailyForecasts[4].Day.IconPhrase\r\n                    : \"Image not found\"\r\n                }\r\n                width=\"128px\"\r\n                height=\"128px\"\r\n              ></img>\r\n              <span>\r\n                {infoForecast.DailyForecasts[4].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[4].Temperature.Maximum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600\">\r\n                /\r\n                {infoForecast.DailyForecasts[4].Temperature\r\n                  ? ConvertToCelsius(\r\n                      infoForecast.DailyForecasts[4].Temperature.Minimum.Value\r\n                    )\r\n                  : \"-\"}\r\n              </span>\r\n              <span className=\"ml-5\">\r\n                {infoForecast.DailyForecasts[4].Day\r\n                  ? infoForecast.DailyForecasts[4].Day.IconPhrase\r\n                  : \"-\"}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const LOCATION_CITY_SEARCH_API =\r\n  \"https://dataservice.accuweather.com/locations/v1/cities/search?\";\r\n\r\nexport const FORECAST_5DAYS_API =\r\n  \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\";\r\n\r\nexport const IMAGE = \"nellyMeteoApp/images/\";\r\n","import React from \"react\";\r\n\r\nexport default function contact() {\r\n  return (\r\n    <div>\r\n      <h2>This page isn't implemented yet</h2>\r\n      <p>Coming soon...</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function about() {\r\n  return (\r\n    <div>\r\n      <h2>This page isn't implemented yet</h2>\r\n      <p>Coming soon...</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./main.css\";\nimport Header from \"./component/header\";\nimport MainHome from \"./component/mainHome\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Forecast from \"./component/forecast\";\nimport Contact from \"./component/contact\";\nimport About from \"./component/about\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={MainHome} />\n          <Route path=\"/forecast\" component={Forecast} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//React.StrictMode\nserviceWorker.unregister();\n"],"sourceRoot":""}